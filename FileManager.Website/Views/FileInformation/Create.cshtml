@model FileManager.Models.FileInformation

@{
    ViewBag.Title = "Create";
}

<h4 class="text-success">Add New File</h4>


@using (Html.BeginForm("Create", "FileInformation", FormMethod.Post, new { encType = "Multipart/Form-Data" }))
{
    @Html.ValidationSummary()
    @Html.AntiForgeryToken()
    <form>
    
        <div class="row">
            <div class="col-10">
                <div class="border p-3 row">
                    <div class="col-12 pb-2">
                      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-10">
                        <h4 class="text-success">Sender Details</h4>
                    </div>
                   
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Sectionoforigin, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Sectionoforigin, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Sectionoforigin, "", new { @class = "text-danger" })

                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.Department, new SelectList(@ViewBag.departmentList), "--Select Department--", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Department ,"", new { @class = "text-danger" })
                    </div>


                    <div class="col-10">
                        <h4 class="text-success">Receiver Details</h4>
                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Addressee, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Addressee, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Addressee, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Receivedby, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Receivedby, new { htmlAttributes = new { @class = "form-control", @Value = User.Identity.Name.ToString(), @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Receivedby, "", new { @class = "text-danger" })
                    </div>


                    <div class="col-10">
                        <h4 class="text-success">File Details</h4>
                    </div>
                    <div class="mb-3 col-4">
                        @*@Html.LabelFor(model => model.Filename + "Please Dont Add Special Charcters (@#$%^&*|\\/)", htmlAttributes: new { @class = "control-label" })*@
                        <label>File Name (Please Dont Add #$%^&*|\/)</label>
                        @Html.EditorFor(model => model.Filename, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Filename, "", new { @class = "text-danger" })

                    </div>

                    <div class="mb-3 col-4">
                        @Html.LabelFor(model => model.Filenumber, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Filenumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Filenumber, "", new { @class = "text-danger" })

                    </div>
                    <div class="mb-3 col-2">
                        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })

                    </div>

                    <div class="mb-3 col-10">
                        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.Subject, new { @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })

                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Pages, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Pages, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Pages, "", new { @class = "text-danger" })

                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-10">
                        <h4 class="text-success">Upload File</h4>
                    </div>
                    
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Pdfdirectory, htmlAttributes: new { @class = "control-label" })
                        <input type="file" id="file" name="file" value="BrowseFile" class="form-control" accept="application/pdf" required="required" />
                        @Html.ValidationMessageFor(model => model.Pdfdirectory, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-10 pt-4">
                        <input type="submit" value="Create" class="btn btn-success" />
                        <input class="btn btn-secondary" type="button" title="Back To Index" value="Back To Index" onclick="location.href = '/FileInformation/Index'" />
                    </div>
                </div>
               
            </div>
        </div>
    </form>
}


