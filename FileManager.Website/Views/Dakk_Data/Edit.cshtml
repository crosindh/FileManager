@model FileManager.Models.Dakk_Data
@{
    ViewBag.Title = "Edit";
}
<h2 class="text-success">Update Dakk</h2>

@using (Html.BeginForm("Edit", "Dakk_Data", FormMethod.Post, new { enctype = "Multipart/Form-Data" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    <form>
        <div class="row">
            <div class="col-10">
                <div class="border p-3 row">
                    <div class="col-12 pb-2">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-12">
                        <h4 class="text-success">Sender Details</h4>
                    </div>
                    <div class="col-2">
                        @Html.LabelFor(model => model.DateOnLetter, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.DateOnLetter, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.DateOnLetter, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-3">
                        @Html.LabelFor(model => model.Givennumber, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Givennumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Givennumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-2">
                        @Html.LabelFor(model => model.Sectionoforigin, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Sectionoforigin, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Sectionoforigin, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-3">
                        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-10">
                        <h4 class="text-success">Receiver Details</h4>
                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Addressee, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Addressee, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Addressee, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Receivedby, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Receivedby, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Receivedby, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-12">
                        <h4 class="text-success">File Details</h4>
                    </div>
                    <div class="mb-3 col-2">
                        @Html.LabelFor(model => model.DateReceived, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.DateReceived, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.DateReceived, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-2">
                        @Html.LabelFor(model => model.Pages, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Pages, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Pages, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-10">
                        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.Status, new SelectList(ViewBag.list2), "--Select Status--", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.ForwardTo, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.ForwardTo, new SelectList(ViewBag.list3), "--Select Section--", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ForwardTo, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-2">
                        @Html.LabelFor(model => model.UploadTime, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.UploadTime, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.UploadTime, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-10">
                        <h4 class="text-success">Upload File</h4>
                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Pdfdirectory, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Pdfdirectory, new { @readonly = true, @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Pdfdirectory, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.CurrentLocation, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.CurrentLocation, new { @readonly = true, @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CurrentLocation, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.ForwardTime, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.ForwardTime, new { @readonly = true, @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ForwardTime, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-10 pt-4">
                        <input type="submit" value="Update" class="btn btn-success" />
                        <input class="btn btn-secondary" type="button" title="Back To Index" value="Back To Index" onclick="location.href = '/Dakk_Data/Index'" />
                    </div>
                </div>
            </div>
        </div>
    </form>
}
