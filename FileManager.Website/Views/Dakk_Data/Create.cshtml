@model FileManager.Models.Dakk_Data
@{
    ViewBag.Title = "Create";
}
<h4 class="text-success">Add Dakk Data</h4>
@using (Html.BeginForm("Create", "Dakk_Data", FormMethod.Post, new { encType = "Multipart/Form-Data" }))
{
    @Html.AntiForgeryToken()
    <form>
        <div class="row">
            <div class="col-10">
                <div class="border p-3 row">
                    <div class="col-12 pb-2">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-12">
                        <h4 class="text-success">Sender Details</h4>
                    </div>
                    <div class="col-2">
                        @Html.LabelFor(model => model.DateOnLetter, htmlAttributes: new { @class = "control-label" })
                        <input class="form-control " id="Date" name="DakkDate" required="required" type="date" value="" />
                        @Html.ValidationMessageFor(model => model.DateOnLetter, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-3">
                        @Html.LabelFor(model => model.Givennumber, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Givennumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Givennumber, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3 col-2">
                        @Html.LabelFor(model => model.Sectionoforigin, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Sectionoforigin, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Sectionoforigin, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-3">
                        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label " })
                        @Html.DropDownListFor(model => model.Department, new SelectList(ViewBag.list), "--Select Department--", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-10">
                        <h4 class="text-success">Receiver Details</h4>
                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Addressee, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Addressee, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Addressee, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Receivedby, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Receivedby, new { htmlAttributes = new { @class = "form-control", @Value = User.Identity.Name.ToString(), @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Receivedby, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-12">
                        <h4 class="text-success">File Details</h4>
                    </div>
                    <div class="mb-3 col-2">
                        @Html.LabelFor(model => model.DateReceived, htmlAttributes: new { @class = "control-labe" })
                        <input class="form-control " id="Date" name="ReceivedDate" required="required" type="date" value="" />
                        @Html.ValidationMessageFor(model => model.DateReceived, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3 col-2">
                        @Html.LabelFor(model => model.Pages, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Pages, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Pages, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-10">
                        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.Status, new SelectList(ViewBag.list2), "--Select Status--", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.ForwardTo, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.ForwardTo, new SelectList(ViewBag.list3), "--Forward To--", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ForwardTo, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-10">
                        <h4 class="text-success">Upload File</h4>
                    </div>
                    <div class="mb-3 col-5">
                        @Html.LabelFor(model => model.Pdfdirectory, htmlAttributes: new { @class = "control-label" })
                        <div>
                            <input type="file" id="file" name="file" value="BrowseFile" class="form-control" accept="application/pdf" required="required" />
                        </div>
                        @Html.ValidationMessageFor(model => model.Pdfdirectory, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 col-10 pt-4">
                        <input type="submit" value="Create" class="btn btn-success" />
                        <input class="btn btn-secondary" type="button" title="Back To Index" value="Back To Index" onclick="location.href = '/Dakk_Data/Index'" />
                    </div>
                </div>

            </div>
        </div>
    </form>
}